name: Deploy to EC2 with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # 1. 소스 코드를 체크아웃
    - name: Checkout code
      uses: actions/checkout@v4

    # 2. JDK 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Grant Execute Permission For Gradlew
      run: chmod +x gradlew

    # 3. .env 파일 생성
    - name: Create dotenv file
      run: |
          touch .env
          echo "${{ secrets.ENV_SECRETS }}" >> .env 

    # 4. yaml 파일을 EC2로 전송
    - name: Transfer yaml files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        source: "docker-compose-test.yml, prometheus.yml"
        target: /home/ubuntu

    # 5. Gradle 빌드
    - name: Build with Gradle
      run: ./gradlew build -x test

    # 6. Docker 로그인 (Docker Hub 사용)
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
            
    # 7. Docker Compose로 이미지 빌드 및 푸시
    - name: Build and Push Docker Image
      run: |
        docker compose -f docker-compose-test.yml build
        docker compose -f docker-compose-test.yml push

    # 8. SSH로 EC2 연결 및 배포
    - name: Deploy to EC2 Instance 1
      uses: appleboy/ssh-action@v1.2.0
      with:
        key: ${{secrets.EC2_KEY}}
        host: ${{secrets.EC2_HOST}}
        username: ubuntu
        script: |
          whoami
          sudo docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}
          sudo docker compose -f docker-compose-test.yml pull
          sudo docker compose -f ./docker-compose-test.yml up -d
          sleep 1m
          if curl -f http://localhost:8000/actuator/health; then
            echo "Instance 1 is healthy."
          else
            echo "Instance 1 health check failed."
            exit 1
          fi
    - name: Deploy to EC2 Instance 2
      uses: appleboy/ssh-action@v1.2.0
      with:
        key: ${{ secrets.EC2_KEY }}
        host: ${{ secrets.EC2_HOST_2 }}
        username: ubuntu
        script: |
          whoami
          sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          sudo docker compose -f docker-compose-test.yml pull
          sudo docker compose -f ./docker-compose-test.yml up -d
          sleep 1m
          if curl -f http://localhost:8000/actuator/health; then
            echo "Instance 2 is healthy."
          else
            echo "Instance 2 health check failed."
            exit 1
          fi
