version: '3.8'
networks:
  msa-network:
    driver: bridge

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP 기본 포트
      - "15672:15672" # 관리 콘솔 포트
    networks:
      - msa-network

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb/:/docker-entrypoint-initdb.d/
    environment:
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    networks:
      - msa-network
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  config:
    build:
      context: ./config
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
    networks:
      - msa-network

  account-service:
    build:
      context: ./account-service
    container_name: account-service
    ports:
      - 6000:6000
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      ACCOUNT_SERVICE_PASSWORD: ${ACCOUNT_SERVICE_PASSWORD}
      SPRING_APPLICATION_NAME: account-service
      MONGODB_URI: ${MONGODB_URI}
    depends_on:
      config:
        condition: service_healthy
      mongo:
        condition: service_started
      registry:
        condition: service_started
      auth-service:
        # oauth2 client 역할이므로 auth-service가 먼저 실행되어야 함(jwks uri를 가져와야 함), 그렇지 않으면 예외 발생하고 서버 실행 안됨
        # service_healthy로 하고 싶은데 auth-service가 health check가 안되서 일단 service_started로 함
        condition: service_started
    networks:
      - msa-network

  statistics-service:
    build:
      context: ./statistics-service
    container_name: statistics-service
    ports:
      - 7000:7000
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      SPRING_APPLICATION_NAME: statistics-service
      #MONGODB_URI: ${MONGODB_URI}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      STATISTICS_SERVICE_PASSWORD: ${STATISTICS_SERVICE_PASSWORD}
    depends_on:
      - config
      - statistics-mongodb
      - registry
    networks:
      - msa-network

  statistics-mongodb:
    environment:
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    image: sqshq/piggymetrics-mongodb
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - msa-network

  registry:
    build:
      context: ./registry
    container_name: registry
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 10s
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      SPRING_APPLICATION_NAME: registry
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 8761:8761
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - msa-network

  gateway:
    build:
      context: ./gateway
    container_name: gateway
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 8000:8000
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - msa-network

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - 5000:5000
#    healthcheck: # 왜 안될까..
#      test: [ "CMD", "curl", "-f", "http://localhost:5000/.well-known/openid-configuration" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#      start_period: 30s  # 초기화 시간 10초 대기
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      BROWSER_CLIENT_PASSWORD: ${BROWSER_CLIENT_PASSWORD}
      NOTIFICATION_SERVICE_PASSWORD: ${NOTIFICATION_SERVICE_PASSWORD}
      STATISTICS_SERVICE_PASSWORD: ${STATISTICS_SERVICE_PASSWORD}
      ACCOUNT_SERVICE_PASSWORD: ${ACCOUNT_SERVICE_PASSWORD}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      SPRING_APPLICATION_NAME: auth-service
    depends_on:
      config:
        condition: service_healthy
      auth-mongodb:
        condition: service_started
      registry:
        condition: service_started
    networks:
      - msa-network

  auth-mongodb:
    image: mongo:latest
    container_name: auth-mongodb
    environment:
      MONGO_INITDB_DATABASE: authdb
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
#   volumes:
#     - auth-mongodb:/data/db
    ports:
      - 25000:27017
    networks:
      - msa-network
#volumes:
#  auth-mongodb:

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - 9000:9000
    environment:
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      NOTIFICATION_SERVICE_PASSWORD: ${NOTIFICATION_SERVICE_PASSWORD}
      EMAIL_USERNAME: your-email@gmail.com
      EMAIL_PASSWORD: password
      SPRING_APPLICATION_NAME: notification-service
    depends_on:
      - config
      - notification-mongodb
      - auth-service
      - registry
    networks:
      - msa-network

  notification-mongodb:
    image: mongo:latest
    container_name: notification-mongodb
    environment:
      MONGO_INITDB_DATABASE: notificationdb
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - 27018:27017
    networks:
      - msa-network