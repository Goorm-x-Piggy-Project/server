plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.6' // 예시 버전. 적절히 조정 필요
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
}

group = 'server'
version = '1.0-SNAPSHOT'


repositories {
    mavenCentral()
}

dependencies {

    // Spring 기본
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // 데이터베이스
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:1.50.3'

    // JSON 처리
    testImplementation 'com.jayway.jsonpath:json-path:2.2.0'

    // Resilience4j (Hystrix 대체)
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'
}

// 테스트 수행 시 JaCoCo 리포트 생성
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

// Maven의 spring-boot-maven-plugin에서 finalName 설정을 Gradle에서는 다음과 같이 archiveBaseName으로 설정
bootJar {
    archiveBaseName.set("account-service")
}