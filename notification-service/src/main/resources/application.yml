#spring:
#  application:
#    name: notification-service
#  config:
#    import: optional:configserver:http://user:${CONFIG_SERVICE_PASSWORD}@config:8888
spring:
  application:
    name: notification-service
  cloud:
    config:
      uri: http://config:8888
      fail-fast: true
      password: ${CONFIG_SERVICE_PASSWORD}
      username: user
  config:
    import: optional:configserver:http://config:8888
  security:
    oauth2:
      client:
        registration:
          notification-service: # registrationId
            provider: auth-service
            client-id: notification-service
            client-secret: ${NOTIFICATION_SERVICE_PASSWORD}
            authorization-grant-type: client_credentials
            scope: server
        provider:
          auth-service:
            issuer-uri: http://auth-service:5000
            token-uri: http://auth-service:5000/oauth2/token
      resourceserver:
        jwt:
          issuer-uri: http://auth-service:5000
          jwk-set-uri: http://auth-service:5000/oauth2/jwks
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
#  data:
#    mongodb:
#      host: notification-mongodb
#      port: 27017
#      database: notificationdb
##      username: user
##      password: ${MONGODB_PASSWORD}
#      socket-timeout: 300000 # 타임아웃 설정 (밀리초)
#      connect-timeout: 30000
#  data:
#    mongodb:
#      host: localhost
#      port: 27017
#      authentication-database: admin
#      database: piggymetrics
#      username: user
#      password: password
#      socket-timeout: 30000 # 밀리초 (30초)
#      connect-timeout: 10000 # 밀리초 (10초)

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10000

email:
  from: your-email@example.com

#backup:
#  cron: "0 0 12 * * ?" # 매일 12시에 실행
#
#remind:
#  cron: "0 0 18 * * ?" # 매일 18시에 실행

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://registry:8761/eureka/

logging:
  level:
    root: INFO
    com.example: DEBUG
    org.springframework.cloud.gateway: DEBUG