security:
  oauth2:
    client:
      registration:
          statistics-service:
            clientId: statistics-service
            clientSecret: ${STATISTICS_SERVICE_PASSWORD}
            accessTokenUri: http://auth-service:5000/oauth2/token
            grant-type: client_credentials
            scope: server
          provider:
            auth-service:
                issuer-uri: http://auth-service:5000
                token-uri: http://auth-service:5000/oauth2/token
    resourceserver:
        jwt:
            issuer-uri: http://auth-service:5000
            jwk-set-uri: http://auth-service:5000/oauth2/jwks


spring:
  data:
    mongodb:
      host: statistics-mongodb
      username: user
      password: ${MONGODB_PASSWORD}
      database: piggymetrics
      port: 27017

management:
  endpoints:
    web:
      exposure:
        include: health, metrics, circuitbreakers, prometheus
    security:
      enabled: false
    endpoint:
      health:
        show-details: always
      metrics:
        export:
          prometheus:
            enabled: true

resilience4j:
  circuitbreaker:
    instances:
      default:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
server:
  port: 7000

rates:
  url: https://www.koreaexim.go.kr/site/program/financial/exchangeJSON
  authkey: nY5T9XKTkiWkFBxsbrm4ZzUQZzPv1R7Z

#resilience4j: # 테스트 필요
#  circuitbreaker:
#    instances:
#      default:
#        slidingWindowSize: 10
#        minimumNumberOfCalls: 10 # 10번째 호출부터 실패율 계산 시작(default: 100)
#        failureRateThreshold: 50
#        waitDurationInOpenState: 10s
#        permittedNumberOfCallsInHalfOpenState: 5 # half open 상태에서 5번 호출이 성공하면 circuit closed 상태로 전환